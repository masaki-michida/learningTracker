backend: spring boot
frontend: react+vite+ts
database: postgresql
docker
docker compose

javaライブラリ
lombok...getter,setter,toString,equals,hashCodeメソッドを自動生成してコードの冗長性を減らしてくれる
ORMフレームワーク
jpa...データベースとのやり取りを簡単にするためのフレームワーク

ログイン認証
spring security...ユーザー認証と認可を管理するためのフレームワーク

MVCアーキテクチャ
RESTful API+React

データの流れ
クライアント（React）からリクエスト
Controller（@RestController）がリクエストを受け取る
Service（@Service）でビジネスロジックを処理
Repository（@Repository）でデータベース操作
結果をControllerを通じてクライアントに返す

疑問
getter...変数を取り出すだけのメソッド
setter...変数に値をセットするだけのメソッド

frontend/
├── src/
│   ├── components/
│   │   ├── LearningRecordForm.tsx    # 学習記録入力フォーム
│   │   └── LearningRecordList.tsx    # 学習記録一覧表示
│   ├── pages/
│   │   └── LearningRecordPage.tsx    # メインページ（フォームと一覧を統合）
│   ├── types/
│   │   └── LearningRecord.ts         # TypeScript型定義
│   ├── App.tsx                       # アプリケーションのルート
│   ├── main.tsx                      # エントリーポイント
│   └── index.css                     # スタイル定義

backend/
├── src/main/java/com/example/learningTracker/
│   ├── controller/
│   │   └── LearningRecordController.java  # APIエンドポイント定義
│   ├── model/
│   │   └── LearningRecord.java            # データモデル
│   ├── repository/
│   │   └── LearningRecordRepository.java  # データベースアクセス
│   ├── config/
│   │   └── CorsConfig.java                # CORS設定
│   └── LearningTrackerApplication.java    # アプリケーション起動
├── src/main/resources/
│   └── application.properties             # アプリケーション設定
└── pom.xml                                # 依存関係管理